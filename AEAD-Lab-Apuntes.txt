AEAD Lab APUNTES:

________________________________________________________________________________
TIP #001
________________________________________________________________________________
Configurar autocompletado de Eclipse:

- Agregar:
    "@._abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ"
  a  Eclipse > Preferences > Java > Editor > Content Assist.
  In the bottom pane "Auto Activation"
  there's the field "Auto activation triggers for Java".

REF: https://stackoverflow.com/questions/6912169/eclipse-enable-autocomplete-content-assist

- En "Eclipse > Preferences > Java > Editor > Content Assist" -> "Disable insertion triggers except Enter"

- En "Eclipse > Preferences > Java > Editor > Typing" -> "Auto insert semicolons"

- En "Eclipse > Preferences > Java > Editor > Save Actions" -> "Organize imports"
- En "Eclipse > Preferences > Java > Editor > Save Actions" -> "Aditional Actions"


- En "Eclipse > Preferences > General > Editors > Keys":
  - Asignar "ReDo" a "Command+Y"
  - Asignar "Delete to End of Line" a "Command+D"
  - Asignar "Line End" a "END"
  - Asignar "Line Start" a "INI"



  ________________________________________________________________________________
  TIP #001
  ________________________________________________________________________________

  Enlaces favoritos:

  - Spring Initializer:
    https://start.spring.io/

  - Interprete de Java online:
    https://replit.com/languages/java10

  - GIT - AEAD home
    https://github.com/aead72

  - GIT - Eliminado de ramas remotas:
    https://stackoverflow.com/questions/2003505/how-do-i-delete-a-git-branch-locally-and-remotely/23961231#23961231

  - JAVA - Lambda Expressions
    http://tutorials.jenkov.com/java/lambda-expressions.html

  - Online Yaml Tools: 
    https://onlineyamltools.com/



 ________________________________________________________________________________
  TIP #002
 ________________________________________________________________________________

  Visaul Studio Code

  - brew install --cask visual-studio-code

  - Instalar Font: "Casacadia Code PL"
  - Configurar 'Cascadia Code PL', como primer font en "Settings" --> "Commonly used" --> "Editor Font Family".

  - Configurar 'rootPath' en lugar de 'rootName, en "Settings" --> "Window" --> "Title".

  - Instalar extensiones:
    + Auto Rename Tag
    + Bracket Pair Colorizer 2
    + Cobalt2 Theme Official
    + Docker
    + GitLens
    + Thunder Client (reemplazo de Postman)

  - Turn on Settings Sync (con GitHub)



 ________________________________________________________________________________
  TIP #003
 ________________________________________________________________________________

  Docker en Mac:

  - Alternativa a Docker Desktop (https://golangrepo.com/repo/abiosoft-colima-go-miscellaneous):
    brew install lima
    brew install docker
    brew install colima
    colima start

  - Docker Hub: https://hub.docker.com

  - Dockerfile: https://docs.docker.com/engine/reference/builder/



 ________________________________________________________________________________
  TIP #004
 ________________________________________________________________________________

  iterm2:

  - brew cask install iterm2
  - iTerm2 Menu --> "Make iTerm2 Default Term"
  - iTerm2 Menu --> "Install Shell Integration"
  - iTerm2 "Toolbelt" --> "Command History"
  - iTerm2 "Toolbelt" --> "Recent Directories"
  - iTerm2 "Windows"" --> "Save Windows Arrangement" (dimensionar ventana por defecto)
  - iTerm2 Menu --> "Preferences" --> "General" --> "Open Default Window Arrangement"

  - Instalar Font: "Casacadia Code PL", y configurar en Profile->Text

  - Instalar ZSH:
    sh -c "$(curl -fsSL https://raw.github.com/ohmyzsh/ohmyzsh/master/tools/install.sh)"

  - Instalar zsh plugin: "Autosuggestions":
    git clone https://github.com/zsh-users/zsh-autosuggestions ${ZSH_CUSTOM:-~/.oh-my-zsh/custom}/plugins/zsh-autosuggestions

  - Instalar zsh plugin: syntax highlight:
    git clone https://github.com/zsh-users/zsh-syntax-highlighting.git

  - Instalar zsh plugin: history substring search:
      git clone https://github.com/zsh-users/zsh-history-substring-search ${ZSH_CUSTOM:-~/.oh-my-zsh/custom}/plugins/zsh-history-substring-search
      echo "source ${(q-)PWD}/zsh-syntax-highlighting/zsh-syntax-highlighting.zsh" >> ${ZDOTDIR:-$HOME}/.zshrc

  - En ".zshrc":
    ZSH_THEME="jonathan"
    zstyle ':omz:update' mode auto      # update automatically without asking
    zstyle ':omz:update' frequency 13

    # History
    export HISTFILE="$HOME/.zsh_history"
    HISTSIZE=10000000
    export SAVEHIST=$HISTSIZE
    setopt EXTENDED_HISTORY
    setopt append_history # Allow multiple terminal sessions to all append to one zsh command history
    setopt extended_history # save timestamp of command and duration
    setopt inc_append_history # Add comamnds as they are typed, don't wait until shell exit
    setopt hist_expire_dups_first # when trimming history, lose oldest duplicates first
    setopt hist_ignore_dups # Do not write events to history that are duplicates of previous events
    setopt hist_ignore_space # remove command line from history list when first character on the line is a space
    setopt hist_find_no_dups # When searching history don't display results already cycled through twice
    setopt hist_reduce_blanks # Remove extra blanks from each command line being added to history
    setopt hist_verify # don't execute, just expand history
    setopt share_history # imports new commands and appends typed commands to history

    plugins=(
      git
      macos
      iterm2
      history
      zsh-autosuggestions
      # zsh-syntax-highlighting
      zsh-history-substring-search
    )

    test -e "${HOME}/.iterm2_shell_integration.zsh" && source "${HOME}/.iterm2_shell_integration.zsh"

    #bindkey '^[[A' history-substring-search-up
    #bindkey '^[[B' history-substring-search-down
    bindkey "$terminfo[kcuu1]" history-substring-search-up
    bindkey "$terminfo[kcud1]" history-substring-search-down


 ________________________________________________________________________________
  TIP #005
 ________________________________________________________________________________

  Minikube

  - K8s Docs: https://kubernetes.io/docs/home/

  - brew install hyperkit
  - brew install Minikube
  - minikube config set driver hyperkit
  - minikube start --driver=hyperkit
